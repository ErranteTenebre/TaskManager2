// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManager.EntityFramework;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(TasksDbContext))]
    [Migration("20240515233815_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Infrastructure.Entities.RefreshSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FingerPrint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshSessions");
                });

            modelBuilder.Entity("WebApplication1.Infrastructure.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "mrm.aimdar@mail.ru",
                            Login = "Sungat Aidar",
                            Password = "111111"
                        });
                });

            modelBuilder.Entity("WebApplication1.Infrastructure.Entities.Workspace", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Workspaces");

                    b.HasData(
                        new
                        {
                            Id = "1c6e5e97-5e3b-43aa-b804-8d5eaf972440",
                            Title = "Мое рабочее пространство"
                        },
                        new
                        {
                            Id = "1c6e5e97-5e3b-43aa-b804-8d5eaf922411",
                            Title = "Команда мечты"
                        },
                        new
                        {
                            Id = "1c6e5e97-5e3b-56ya-b804-8d5eaf922411",
                            Title = "Неуставающие"
                        });
                });

            modelBuilder.Entity("WebApplication1.Infrastructure.Entities.WorkspaceUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WorkSpaceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkSpaceId");

                    b.ToTable("WorkspacesUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1,
                            WorkSpaceId = "1c6e5e97-5e3b-43aa-b804-8d5eaf972440"
                        },
                        new
                        {
                            Id = 2,
                            UserId = 1,
                            WorkSpaceId = "1c6e5e97-5e3b-43aa-b804-8d5eaf922411"
                        },
                        new
                        {
                            Id = 3,
                            UserId = 1,
                            WorkSpaceId = "1c6e5e97-5e3b-56ya-b804-8d5eaf922411"
                        });
                });

            modelBuilder.Entity("WebApplication1.Infrastructure.Entities.RefreshSession", b =>
                {
                    b.HasOne("WebApplication1.Infrastructure.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication1.Infrastructure.Entities.WorkspaceUser", b =>
                {
                    b.HasOne("WebApplication1.Infrastructure.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Infrastructure.Entities.Workspace", "Workspace")
                        .WithMany()
                        .HasForeignKey("WorkSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Workspace");
                });
#pragma warning restore 612, 618
        }
    }
}
